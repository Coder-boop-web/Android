name: Step 0, Welcome

# This step triggers after the learner creates a new repository from the template.
# This workflow updates from step 0 to step 1.

# This will run every time we create push a commit to `main`.
on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  get_current_step:
    name: Check current step number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: get_step
        run: |
          echo "current_step=$(cat ./.github/steps/-step.txt)" >> $GITHUB_OUTPUT
    outputs:
      current_step: ${{ steps.get_step.outputs.current_step }}

  on_start:
    name: On start
    needs: get_current_step
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Let's get all the branches.

      - name: Prepare a branch, and file
        run: |
          echo "Make sure we are on step 0"
          if [ "$(cat .github/steps/-step.txt)" != 0 ]
          then
            echo "Current step is not 0"
            exit 0
          fi

          echo "Make a branch"
          BRANCH=welcome-workflow
          git checkout -b $BRANCH

          echo "Create Android project structure"
          mkdir -p MyAndroidApp/app/src/main/java/com/example/myandroidapp
          mkdir -p MyAndroidApp/app/src/main/res/layout
          mkdir -p MyAndroidApp/app/src/main/res/values

          # Create a basic AndroidManifest.xml
          cat <<EOL > MyAndroidApp/app/src/main/AndroidManifest.xml

          # Create a basic MainActivity.java
          cat <<EOL > MyAndroidApp/app/src/main/java/com/example/myandroidapp/MainActivity.java
package com.example.myandroidapp;

import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
}
EOL

          # Create a basic layout file
          cat <<EOL > MyAndroidApp/app/src/main/res/layout/activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Welcome to My Android App!" />
</LinearLayout>
EOL

          # Create a basic strings.xml
          cat <<EOL > MyAndroidApp/app/src/main/res/values/strings.xml
<resources>
    <string name="app_name">My Android App</string>
</resources>
EOL

          echo "Make a commit"
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add MyAndroidApp/
          git commit -m "Create basic Android project structure"

          echo "Push"
          git push --set-upstream origin $BRANCH

          echo "Restore main"
          git checkout main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
