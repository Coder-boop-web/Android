name: Step 0, Welcome

# This step Imports the files from Android.
on:
  workflow_dispatch:
  push:
    branches:
      - main
      
permissions:
  contents: write
  packages: write
  deployments: write
          
jobs:
  Import-files:
    name: Import files from Android
    runs-on: ubuntu-latest

    steps:
      - name: Create or modify files
        run: |
          echo "Creating or modifying files..."
          mkdir -p MyAndroidApp/app/src/main/java/com/example/myandroidapp
          
          # Check if MainActivity.java exists; if not, create it
          if [ ! -f MyAndroidApp/app/src/main/java/com/example/myandroidapp/MainActivity.java ]; then
            echo "public class MainActivity {}" > MyAndroidApp/app/src/main/java/com/example/myandroidapp/MainActivity.java
            echo "MainActivity.java created."
          else
            echo "MainActivity.java already exists, skipping creation."
          fi
          
          for dir in MyAndroidApp/app/src/main/java/com/example/myandroidapp \
                     MyAndroidApp/app/src/main/res/layout \
                     MyAndroidApp/app/src/main/res/values \
                     MyAndroidApp/app/src/main/java/com/example/myandroidapp/ui \
                     MyAndroidApp/app/src/main/java/com/example/myandroidapp/data \
                     MyAndroidApp/app/src/main/java/com/example/myandroidapp/model \
                     MyAndroidApp/app/src/main/java/com/example/myandroidapp/utils \
                     MyAndroidApp/app/src/main/res/drawable \
                     MyAndroidApp/app/src/main/res/menu; do
            mkdir -p "$dir"
            echo "$dir created or already exists."
          done
          
          # Create files if they don't exist
          for file in MyAndroidApp/app/src/main/AndroidManifest.xml \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/MainActivity.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/ui/HomeFragment.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/ui/SettingsFragment.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/data/DataRepository.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/model/User.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/utils/Constants.java \
                      MyAndroidApp/app/src/main/res/layout/activity_main.xml \
                      MyAndroidApp/app/src/main/res/layout/fragment_home.xml \
                      MyAndroidApp/app/src/main/res/layout/fragment_settings.xml \
                      MyAndroidApp/app/src/main/res/values/strings.xml \
                      MyAndroidApp/app/src/main/res/values/colors.xml \
                      MyAndroidApp/app/src/main/res/values/styles.xml \
                      MyAndroidApp/app/src/main/res/menu/menu_main.xml; do
            if [ ! -f "$file" ]; then
              touch "$file"
              echo "$file created."
            else
              echo "$file already exists, skipping creation."
            fi
          done          

          echo "Make a commit"
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add MyAndroidApp/
          git commit -m "Create extended Android project structure with additional files"

          echo "Push"
          git push --set-upstream origin $BRANCH

          echo "Restore main"
          git checkout main

          echo "Merge the new branch into main"
          git merge $BRANCH

          echo "Push the merged changes to main"
          git push origin main

      - name: Make commits
        run: |
          echo "Make a commit"
          git config user.name github-actions
          git config user.email github-actions[bot]@users.noreply.github.com
          git add MyAndroidApp/
          git add AndroidPreferences/
          git add Configure/
          git add AndroidSettings/
          git commit -m "Create extended Android project structure with additional files"

      - name: Create Pull Request
        run: |
          PR_TITLE="Automated PR: Update Android project structure"
          gh pr create --title "$PR_TITLE" --body "This PR was created automatically by GitHub Actions." --base main --head main || echo "No pull request created."

      - name: Enable Auto-Merge
        run: |
          gh pr merge --auto --delete-branch --squash "$PR_TITLE" || echo "No pull request to merge."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




      
